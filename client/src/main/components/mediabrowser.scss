/**
 * Style definitions for the media browser window.
 */

$poster-width: 4cm;
$padding: 3mm;
$infopane-width: 15cm;
$border-radius: 1.5mm;

/* Use media queries to calculate the number of movie poster columns that should
be shown on screen at any given time. This only applies when the media viewer is
in "horizontal" mode. */
@media (min-width: #{($poster-width + $padding) * 2 * 2}) {
    div.media-browser div.posters {
        --poster-columns: 2;
    }
}
@media (min-width: #{($poster-width + $padding) * 3 * 2} ) {
    div.media-browser div.posters {
        --poster-columns: 3;
    }
}
@media (min-width: #{($poster-width + $padding) * 4 * 2}) {
    div.media-browser div.posters {
        --poster-columns: 4;
    }
}
@media (min-width: #{($poster-width + $padding) * 5 * 2}) {
    div.media-browser div.posters {
        --poster-columns: 5;
    }
}
@media (min-width: #{($poster-width + $padding) * 6 * 2}) {
    div.media-browser div.posters {
        --poster-columns: 6;
    }
}

/* Basic Style Definitions for the Media Browser. This defines how the media
browser should be rendered in standard "horizontal" mode. Additional special
definitions for the mobile-friendly "vertical" mode are defined below this
glorious chunk of css. */
div.media-browser {

    position: fixed;
    top: 1cm; left: 1cm;
    width: calc(100vw - 2cm);
    height: calc(100vh - 3cm);

    transform: translateY(-100vh);
    transition: transform .25s;

    box-sizing: border-box;

    background: #202020;
    border-radius: $border-radius;

    cursor: auto; // Cursor normally hidden when control bar goes away

    overflow: hidden;
    
    display: flex;

    div.screenshot {
        position: absolute;
        width: 100%;
        height: 100%;

        background-size: cover;
        background-position: center; 
        mask-image: linear-gradient(50deg, rgba(0,0,0,.05) 20%, rgba(0,0,0,.5) 80%);
        -webkit-mask-image: linear-gradient(50deg, rgba(0,0,0,.05) 20%, rgba(0,0,0,.5) 80%);
    }

    div.posters {

        display: flex;
        flex-wrap: wrap;
        align-content: flex-start;
        flex-grow: 0; // Don't grow
        flex-shrink: 0; // Don't shrink

        padding: $padding;

        height: 100%;
        width: calc(#{$poster-width + $padding} * var(--poster-columns));

        overflow: scroll;
        scrollbar-width: none;

        img {
            width: $poster-width;
            margin-right: $padding;
            margin-bottom: $padding;
            border-radius: $border-radius;

            transform: translateY(0);
            transition: transform .1s;

            cursor: pointer;
        }
        img:hover {
            transform: translateY(-#{$padding / 2});
        }

    }
    // Dang it chrome!
    div.posters::-webkit-scrollbar {
        display: none;
    }

    div.details {
        flex-grow: 1; // Do Grow
        flex-shrink: 1; // Do Shrink

        color: white;

        text-align: right;
        margin-right: $padding;

        div.textcontent {

            /* Not sure why this element needs to be positioned, but if it's not
            then it will render behind the screenshot element. This strange
            effect happens in both Firefox 98 and Chromium 100.*/
            position: relative;

            height: 100%;

            h1 {
                font-size: 300%;
            }

            div.buttons {
                text-align: center;
                position: absolute;
                bottom: calc(10% + 1cm);
                width: 100%;
                margin-left: 3mm;
                margin-right: 3mm;
                
                button {
                    min-width: 25%;
                    box-sizing: border-box;
                    padding: 3mm;

                    font-size: 110%;
                    background-color: #ad0000;
                    transition: transform 0.2s;
                    cursor: pointer;

                    border: none;
                    border-radius: $border-radius;
                    color: white;

                    white-space: nowrap;
                    
                    transform: scale(1);
                }

                button:hover {
                    background-color: #c50000;
                    transform: scale(1.1);
                }
            }
        }
    }
}

div.media-browser[visible="true"] {
    transform: translateY(0);
}

/* Style overrides for the mobile-friendly "vertical" mode */
@media (max-aspect-ratio: 1) {

    div.media-browser {

        flex-direction: column-reverse;

        div.screenshot {
            mask-image: linear-gradient(0deg, rgba(0,0,0,1) 20%, rgba(0,0,0,.4) 80%);
            -webkit-mask-image: linear-gradient(0deg, rgba(0,0,0,.1) 20%, rgba(0,0,0,.4) 60%);
        }

        div.posters {
            flex-wrap: nowrap;
            height: auto;

            img {
                margin-bottom: 0;
            }
        }
    }

}